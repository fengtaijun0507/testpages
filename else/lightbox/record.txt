1.一个是作者的写插件的思路，首先布局好，再把结构放到js中，这样的话，逻辑上的确很好理解

2.第二作者将data-*这个属性用化了，主要获取相应的参数通过ele.dataset.*,来获取或者设置该属性

3.网上把$.data()的方法用于比较，真实太有才了

4.另外这种把插件注册到window上，然后还有自执行函数，还有函数原型书写方法的方式的确赏心悦目
但是把这么多数据直接写在元素上面好吗，能不能自动写进属性中，这样就可以达到数据与逻辑的分离
我想是可以的，在生成页面的时候会会把数据赋值于相应属性即可。


class="js-lightBox" data-role="lightbox" data-source="images/1-1.jpg" data-group="group_1" data-id="bsgl" data-caption=""


5.作者经常通过alert执行来判断函数是否能执行

6.this漂移

7.animate后的回调的确很妙


8.图片的预加载技术


9.作者中很多函数的嵌套，我觉得造成这种原因是因为功能的实现是需要顺序的，可不可以不嵌套的方式，按顺序执行了，我想到promise，订单式这时候链式操作的话，如何向下一步传参，这时候我想到的可以通过把参数都注册构造函数上去，将参数分类，一个dom节点，第二是各种经常改变的参数比如宽度，索引之类的数据

10.另外以后有机会的通过模板渲染的方式传参，我觉得比这个靠谱，因为这个数据放在元素上面，增加手动的成本，如果有1000多张图的话，那还不累死！
还有一个，我觉得构造函数只应该用参数，和一次初始化函数的调用，事件也应该放到prototype中


11.fadeIn(),fadeOut()的使用

12.总之，这样的课程有助于学习如何开发组建，特别弹出层的开发

13.img的width与height设置应该很重要的

14.应该通过前缀来区分是辅助函数还是主过程执行函数，这样的话过程清晰，功能清晰

15.防止点击事件多次触发，用tag
